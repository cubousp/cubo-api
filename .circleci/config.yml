version: 2
jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: Install node@10.0.0
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v10.0.0
            nvm alias default v10.0.0
            # Each step uses the same `$BASH_ENV`, so need to modify it
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV
      - run:
          name: verify node version
          command: node --version

## Javascript Node CircleCI 2.0 configuration file
##
## Check https://circleci.com/docs/2.0/language-javascript/ for more details
##
#version: 2
#jobs:
#
#  build:
#    machine: true
#    working_directory: ~/repo
#
#    steps:
#      - checkout
#
#      - run:
#          name: Install Docker Compose
#          command: |
#            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
#            chmod +x ~/docker-compose
#            sudo mv ~/docker-compose /usr/local/bin/docker-compose
#
#      - run:
#          name: install node@6.2.2
#          command: |
#            set +e;
#            touch $BASH_ENV
#            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
#            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
#            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
#            echo 'nvm install v6.2.2' >> $BASH_ENV
#            echo 'nvm alias default v6.2.2' >> $BASH_ENV
#      - run:
#          name: verify node version
#          command: node --version
#
#      - run:
#          name: Install Yarn
#          command: |
#            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
#            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
#            sudo apt-get update && sudo apt-get install yarn
#
#      # Download and cache dependencies
#      - restore_cache:
#          keys:
#          - v1-dependencies-{{ checksum "package.json" }}
#          # fallback to using the latest cache if no exact match is found
#          - v1-dependencies-
#
#
#      - run: docker-compose up -d
#
#      - run: yarn install
#
#      - save_cache:
#          paths:
#            - node_modules
#          key: v1-dependencies-{{ checksum "package.json" }}
#
#      # run tests!
#      - run: yarn test